// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}



model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  notes    Note[]
  favoriteStores    FavoriteStore[]
  favoritePlants    FavoritePlant[]
}

model Note {
  id       Int    @id @default(autoincrement())
  note     String
  name     String?

  userId   Int
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  favoritePlantId   Int?
  favoritePlant   FavoritePlant? @relation(fields: [favoritePlantId], references: [id])
}

model Plant {
  id              Int    @id @default(autoincrement())
  name            String
  latin           String
  category        String
  tempmax         Float
  tempmin         Float
  ideallight      String
  toleratedlight  String
  watering        String
  image           String
  favorite        Boolean @default(false)
  reviews         Review[]
  favoritePlants  FavoritePlant[]
}

model FavoritePlant {
  id        Int    @id @default(autoincrement())
  notes     Note[]

  userId    Int
  user      User     @relation(fields: [userId], references: [id])

  plantId   Int
  plant     Plant   @relation(fields: [plantId], references: [id])
}

model Review {
  id        Int    @id @default(autoincrement())
  reviews   String

  plantId   Int
  plant     Plant   @relation(fields: [plantId], references: [id])
}

model Store {
  id               Int    @id @default(autoincrement())
  storeinfo        String?
  street           String
  city             String
  state            String
  zip              String
  favoriteStores   FavoriteStore[]
}

model FavoriteStore {
  id        Int    @id @default(autoincrement())
  name      String

  userId    Int
  user      User     @relation(fields: [userId], references: [id])

  storeId   Int
  store     Store    @relation(fields: [storeId], references: [id])
}